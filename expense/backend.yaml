#T1: install nodejs 20
#T2: in the app directory download the project
#T3: add the user to access my sql
#T4: connection with mysql
#T5: 




- name: backend server
  hosts: backend
  become: yes
  vars:
    mysql_password: ExpenseApp@1
    mysql_host: mysql.vijaydevops.store
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: Enable nodejs version 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: download nodejs version 20
    ansible.builtin.package:
      name: "{{item}}"
      state: present
    loop:
    - nodejs
    - mysql
  - name: adding user Expense
    ansible.builtin.user:
      name: expense
  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: Download code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip 
  - name: extract the code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip #by default ansible thinks this is in ansible server
      dest: /app
      remote_src: yes
  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: import mysql data
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_password }}"
      login_host: "{{ mysql_host }}"
      target: /app/schema/backend.sql
      name: all
      state: import

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
      state: restarted
      name: backend 